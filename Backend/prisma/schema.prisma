generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum GenderType {
  MALE
  FEMALE
  OTHER
}

enum UserRole {
  ADMIN
  DOCTOR
  STAFF
}

enum VisitType {
  APPOINTMENT
  EMERGENCY
  WALKIN
}

enum AppointmentStatus {
  PENDING
  COMPLETED
  CANCELLED
}

enum PaymentStatus {
  PAID
  UNPAID
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  role      UserRole
  refreshToken String
  doctor    Doctor?  @relation(fields: [doctorId], references: [id])
  doctorId  String?  @unique
  staff     Staff?   @relation(fields: [staffId], references: [id])
  staffId   String?  @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Doctor {
  id             String        @id @default(uuid())
  name           String
  image          String
  phoneNumber    String
  gender         GenderType
  specialization String
  degree         String
  experience     Int
  fees           Float
  about          String?
  isAvailable    Boolean       @default(true)  
  schedule       Json   
  appointments   Appointment[]
  user           User?
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
}

model Staff {
  id          String     @id @default(uuid())
  name        String
  phoneNumber String
  gender      GenderType
  user        User?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Patient {
  id           String        @id @default(uuid())
  name         String
  email        String        @unique
  phoneNumber  String        @unique
  issue        String
  address      String
  age          Int
  gender       GenderType
  appointments Appointment[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Appointment {
  id              String            @id @default(uuid())
  doctorId        String
  patientId       String
  queueNumber     Int
  appointmentDate DateTime          @default(now())
  slot            Json
  visitType       VisitType         @default(APPOINTMENT)
  status          AppointmentStatus @default(PENDING)
  paymentStatus   PaymentStatus     @default(UNPAID)

  doctor    Doctor   @relation(fields: [doctorId], references: [id])
  patient   Patient  @relation(fields: [patientId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


// {
//   "MONDAY": ["09:00AM-12:00PM", "2:00PM-5:00PM"],
//   "TUESDAY": ["09:00AM-12:00PM"]
// }
