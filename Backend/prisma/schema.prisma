generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Doctor {
  id             String       @id @default(uuid())
  name           String
  email          String       @unique
  phoneNumber    String
  specialization String
  degree         String
  experience     Int
  fees           Float
  about          String?
  availableDays  Json
  timeRangeId    String?      @unique
  timeRange      TimeRange?   @relation(fields: [timeRangeId], references: [id])
  appointments   Appointment[]
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
}

model TimeRange {
  id        String   @id @default(uuid())
  startTime String
  endTime   String
  doctor    Doctor?
}

model Patient {
  id          String         @id @default(uuid())
  name        String
  phoneNumber String
  issue       String
  address     String
  age         Int
  gender      String
  appointments Appointment[]
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
}

model Appointment {
  id              String     @id @default(uuid())
  doctorId        String
  patientId       String
  queueNumber     Int
  appointmentDate DateTime   @default(now())
  slot            String    
  priority        Priority   @default(NORMAL)
  status          AppointmentStatus @default(PENDING)
  paymentStatus   PaymentStatus @default(UNPAID)

  doctor          Doctor     @relation(fields: [doctorId], references: [id])
  patient         Patient    @relation(fields: [patientId], references: [id])
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
}

enum Priority {
  NORMAL
  HIGH
  EMERGENCY
}

enum AppointmentStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
  CANCELLED
}

enum PaymentStatus {
  PAID
  UNPAID
}
